---
- name: Post deploy
  hosts: undercloud
  tasks:
    - name: set fact overcloud_deployment_result
      set_fact:
        overcloud_deployment_result: "{{ overcloud_deployment_result | default('1') }}"

    - name: echo deploy-overcloud return code in status playbook
      debug: var=overcloud_deployment_result

    - name: print result of deploy-overcloud install
      debug: var=overcloud_deployment_result.stdout_lines
      when: overcloud_deployment_result is defined and overcloud_deployment_result == "0"

    - name: See the overcloud deployment
      shell: >
          source {{ instack_user_home }}/stackrc;
          heat stack-list;
          nova list;
          ironic node-list;
          openstack server list;

    - name: heat debug deploy-overcloud failure
      when: overcloud_deployment_result is defined and overcloud_deployment_result != "0"
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/stackrc;
          heat resource-list overcloud;
          heat event-list overcloud;

    - name: debug deploy-overcloud failure
      when: overcloud_deployment_result is defined and overcloud_deployment_result != "0"
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/stackrc;
          heat resource-show overcloud ControllerNodesPostDeployment;

    - name: debug all deployment failures
      when: overcloud_deployment_result is defined and overcloud_deployment_result != "0"
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/stackrc;
          for failed_deployment in $(heat resource-list --nested-depth 5 overcloud | grep FAILED | grep 'StructuredDeployment ' | cut -d '|' -f3); do heat deployment-show $failed_deployment; done;

    - name: grep for errors in heat-engine.log
      when: overcloud_deployment_result is defined and overcloud_deployment_result != "0"
      sudo: yes
      command: "grep ERROR /var/log/heat/heat-engine.log"

    - name: show ironic nodes create template
      template: src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/show_nodes.sh dest={{ instack_user_home }}/show_nodes.sh mode=0755
      when: overcloud_deployment_result is defined and overcloud_deployment_result == "0"

    - name: show ironic nodes
      shell: "{{ instack_user_home }}/show_nodes.sh"
      when: overcloud_deployment_result is defined and overcloud_deployment_result == "0"

    - name: copy the undercloud id_rsa key back to the slave
      fetch: src=~/.ssh/id_rsa dest="{{ base_dir }}/khaleesi/id_rsa_undercloud" flat=yes

    - name: copy get-overcloud-nodes.py to undercloud
      template: src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/get-overcloud-nodes.py.j2 dest={{ instack_user_home }}/get-overcloud-nodes.py mode=0755

    - name: fetch overcloud node names and IPs
      register: overcloud_nodes
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/stackrc;
          python {{ instack_user_home }}/get-overcloud-nodes.py

    - name: add each overcloud node to ansible
      with_dict: overcloud_nodes.stdout
      ignore_errors: yes
      add_host:
        name={{ item.key }}
        groups=overcloud
        ansible_ssh_host={{ item.key }}
        ansible_fqdn={{ item.value }}
        ansible_ssh_user="heat-admin"
        ansible_ssh_private_key_file="{{ lookup('env', 'PWD') }}/id_rsa_undercloud"

- name: regenerate the inventory file after adding hosts
  hosts: localhost
  tasks:
    - name: set_fact for undercloud ip #required for regeneration of ssh.config.ansible
      set_fact: undercloud_ip={{ hostvars['undercloud']['ansible_default_ipv4']['address'] }}

    - name: create inventory from template
      template:
        dest: "{{ lookup('env', 'PWD') }}/{{ tmp.node_prefix }}hosts"
        src: "{{ base_dir }}/khaleesi/playbooks/provisioner/templates/inventory.j2"

    - name: symlink inventory to a static name
      file:
        dest: "{{ lookup('env', 'PWD') }}/hosts"
        state: link
        src: "{{ lookup('env', 'PWD') }}/{{ tmp.node_prefix }}hosts"

    - name: regenerate ssh config
      template: src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/ssh_config.j2 dest={{ base_dir }}/khaleesi/ssh.config.ansible mode=0755

- name: debug output from the overcloud controller
  hosts: overcloud-controller-0
  gather_facts: no
  tasks:
    - name: ceph status
      sudo: yes
      command: ceph status
      ignore_errors: yes

- name: dump puppet apply logs into /var/log for collection
  hosts: overcloud
  gather_facts: no
  tasks:
    - name: get overcloud puppet logs
      sudo: yes
      shell: journalctl -u os-collect-config > /var/log/os-collect-config.log
      ignore_errors: yes

- name: fail playbook when instack-deploy-overcloud fails
  hosts: undercloud
  tasks:
    - fail: msg="instack-deploy-overcloud failed, see the above debug information"
      when: overcloud_deployment_result is defined and overcloud_deployment_result != "0"
