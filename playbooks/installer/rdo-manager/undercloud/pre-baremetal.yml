---
- name: Customize the answer file for baremetal deployment
  hosts: undercloud:&baremetal
  tasks:
    - name: check if answers file exists
      stat: path="/usr/share/instack-undercloud/instack.answers.sample"
      register: answers_file_present

    - name: check if conf file exists
      stat: path="/usr/share/instack-undercloud/undercloud.conf.sample"
      register: conf_file_present

    - name: fail if there is no answers file and no conf file
      fail: msg="Neither a conf file nor an answers file exists"
      when: answers_file_present.stat.exists == False and conf_file_present.stat.exists == False

    - name: copy baremetal answers file
      shell: cp /usr/share/instack-undercloud/instack.answers.sample {{ instack_user_home }}/instack.answers
      when: answers_file_present.stat.exists == True

    - name: edit instack.answers file - local_interface
      lineinfile: dest={{ instack_user_home }}/instack.answers regexp=^LOCAL_INTERFACE line=LOCAL_INTERFACE={{ hw_env.answers_local_interface }}
      when: answers_file_present.stat.exists == True

    - name: edit instack.answers file - network
      replace: dest={{ instack_user_home }}/instack.answers regexp='192.0.2' replace={{ hw_env.network }}
      when: hw_env.network is defined and answers_file_present.stat.exists == True

    - name: edit instack.answers file - network gateway
      lineinfile: dest={{ instack_user_home }}/instack.answers regexp=^NETWORK_GATEWAY line=NETWORK_GATEWAY={{ hw_env.network_gateway }}
      when: answers_file_present.stat.exists == True

    - name: copy baremetal conf file
      shell: cp /usr/share/instack-undercloud/undercloud.conf.sample {{ instack_user_home }}/undercloud.conf
      when: conf_file_present.stat.exists == True

    - name: edit undercloud.conf file - local_interface
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#local_interface line=local_interface={{ hw_env.answers_local_interface }}
      when: conf_file_present.stat.exists == True

    - name: edit undercloud.conf file - dhcp_start
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#dhcp_start line=dhcp_start={{ hw_env.dhcp_start }}
      when: conf_file_present.stat.exists == True and hw_env.dhcp_start is defined

    - name: edit undercloud.conf file - dhcp_end
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#dhcp_end line=dhcp_end={{ hw_env.dhcp_end }}
      when: conf_file_present.stat.exists == True and hw_env.dhcp_end is defined

    - name: edit undercloud.conf file - discovery_iprange
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#discovery_iprange line=discovery_iprange={{ hw_env.discovery_iprange }}
      when: conf_file_present.stat.exists == True and hw_env.discovery_iprange is defined

    - name: edit undercloud.conf file - network_gateway
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#network_gateway line=network_gateway={{ hw_env.undercloud_network_gateway }}
      when: conf_file_present.stat.exists == True and hw_env.undercloud_network_gateway is defined

    - name: edit undercloud.conf file - local_ip
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#local_ip line=local_ip={{ hw_env.undercloud_local_ip }}
      when: conf_file_present.stat.exists == True and hw_env.undercloud_local_ip is defined

    - name: edit undercloud.conf file - undercloud_public_vip
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#undercloud_public_vip line=undercloud_public_vip={{ hw_env.undercloud_public_vip }}
      when: conf_file_present.stat.exists == True and hw_env.undercloud_public_vip is defined

    - name: edit undercloud.conf file - undercloud_admin_vip
      lineinfile: dest={{ instack_user_home }}/undercloud.conf regexp=^#undercloud_admin_vip line=undercloud_admin_vip={{ hw_env.undercloud_admin_vip }}
      when: conf_file_present.stat.exists == True and hw_env.undercloud_admin_vip is defined

    - name: edit undercloud.conf file - network
      shell: >
        sed -i 's/192.0.2/{{ hw_env.network }}/g' {{ instack_user_home }}/undercloud.conf;
        sed -i '/{{ hw_env.network }}/s/#//g' {{ instack_user_home }}/undercloud.conf
      when: hw_env.network is defined and conf_file_present.stat.exists == True

    - name: register short hostname
      shell: "hostname -s"
      register: short_hostname

    - name: register full hostname
      shell: "cat /etc/hostname"
      register: full_hostname

    - name: set the hostname
      shell: >
        hostnamectl set-hostname {{ full_hostname.stdout }};
        hostnamectl set-hostname --transient {{ full_hostname.stdout }}
      sudo: yes

    - name: Set /etc/hostname for those that need it
      lineinfile: >
        dest=/etc/hosts
        line="127.0.1.1 {{ short_hostname.stdout }} {{ full_hostname.stdout }}"
      sudo: yes

    - name: get domain from /etc/resolv.conf
      shell: cat /etc/resolv.conf | grep search | sed -n -e 's/^.*search //p'
      register: search_domain
      sudo: yes

    - name: add short and full hostname to /etc/hosts
      shell: "sed -i 's/localhost4.localdomain4/localhost4.localdomain4 {{ short_hostname.stdout }} {{ full_hostname.stdout }} {{ short_hostname.stdout }}.{{ search_domain.stdout }}/g' /etc/hosts"
      sudo: yes

    - name: add images and templates folders
      shell: >
        mkdir {{ instack_user_home }}/images;
        mkdir {{ instack_user_home }}/templates
      when: hw_env.env_type == 'scale_lab'

    - name: copy instackenv.json to nodes.json
      shell: cp {{ instack_user_home }}/instackenv.json {{ instack_user_home }}/nodes.json

    - name: installing python-six (workaround)
      yum: name=python-six state=present
      sudo: yes
