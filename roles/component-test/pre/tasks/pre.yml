---
- name: compute the directory basename
  set_fact: component_basename={{ tester.component.dir.split('/')|last }}

- name: find the test dependencies file used for the test-run
  set_fact: test_deps_file="{{ tester.component.dir + '/' + tester.component.config_file }}" #"

- name: load config
  include_vars: "{{test_deps_file}}"
  register: result

  #TODO(abregman): add major and minor version in distro settings
- name: set major release
  set_fact: major_release="{{ ansible_distribution + '-' + ansible_distribution_version.split('.')[0] }}"

- name: set full release
  set_fact: full_release="{{ ansible_distribution + '-' + ansible_distribution_version }}"

- name: set test_env
  set_fact: test_env="{{ test_config.virt[item]|default(omit) }}"
  with_items:
      - "{{ major_release }}"
      - "{{ full_release }}"

- name: rsync tests dir to tester
  synchronize: src="{{ tester.component.dir }}" dest="{{ ansible_env.HOME }}/" #"
  register: result

- name: print result
  debug: var=result

- name: Disable any existing repos
  sudo: yes
  shell: sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/*
  register: shell_result
  changed_when: "shell_result.rc == 0"
  failed_when: "shell_result.rc > 2"

- name: Install release tool on machines
  sudo: yes
  command: "yum localinstall -y {{ product.rpm }}"

- name: Execute rhos-release for packstack poodle/puddle
  sudo: yes
  command: "rhos-release {{ product.version.major }} {{ product.repo.rhos_release.extra_args|join(' ') }}"

- name: Create the COPR repos required for component tests
  template: src=../templates/component-test-copr-repo.j2 dest=/etc/yum.repos.d/test-reqs-copr.repo
  sudo: yes
  when: ansible_distribution_version|int >= 6

- name: print tester component dir
  debug: var=tester.component.dir

- name: print HOME dir
  debug: var=ansible_env.HOME

- name: print test environment name
  debug: var=test.env_name

- name: clean log dir
  file: path={{ ansible_env.HOME }}/logs/ state=absent

- name: create log dir
  file: path={{ ansible_env.HOME }}/logs/ state=directory

- name: compute the tester path
  set_fact: component_path={{ ansible_env.HOME + '/' + component_basename }}

- name: print component path
  debug: var={{ component_path }}

- name: print test configuration
  debug: var=test_env
  register: env
